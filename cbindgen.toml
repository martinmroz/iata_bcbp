# License notice for the generated header.
header = """
/*
 * Copyright (C) 2018 Martin Mroz
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file for details.
 */"""
# C include guard.
include_guard = "__IATA_BCBP_H__"
# Warning to indicate the file is automatically generated.
autogen_warning = "/* Warning, this file is autogenerated by cbindgen. Do not edit. */"
# Include a comment with the library version.
include_version = true
# Curly braces are placed on the same line.
braces = "SameLine"
# The desired length of a line to use when formatting lines.
line_length = 80
# The amount of spaces in a tab.
tab_width = 4
# The language to output bindings in.
language = "C"
# A rule to use to select style of declaration in C, tagname vs typedef
style = "Type"

[parse]
# Do not parse dependent crates.
parse_deps = false
# A white list of crate names that are allowed to be parsed
include = []
# A black list of crate names that are not allowed to be parsed
exclude = []
# Whether to use a new temporary target directory when running `rustc --pretty=expanded`.
# This may be required for some build processes.
clean = false

[export]
# Types of items that we'll generate.
item_types = ["constants", "globals", "enums", "structs", "unions", "typedefs", "opaque", "functions"]

# Table of name conversions to apply to item names
[export.rename]

[fn]
# How to format function arguments
args = "Horizontal"
# A rule to use to rename function argument names
rename_args = "None"

[struct]
# A rule to use to rename field names
rename_fields = "None"
# Whether to derive an operator== for all structs
derive_eq = false
# Whether to derive an operator!= for all structs
derive_neq = false
# Whether to derive an operator< for all structs
derive_lt = false
# Whether to derive an operator<= for all structs
derive_lte = false
# Whether to derive an operator> for all structs
derive_gt = false
# Whether to derive an operator>= for all structs
derive_gte = false

[enum]
# A rule to use to rename enum variants
rename_variants = "None"
